// Creating new database
CREATE OR REPLACE DATABASE SPOTIFY_DB;

// Creating new schema
CREATE OR REPLACE SCHEMA SPOTIFY_DB.SPOTIFY_DATA;

// Creating new tables
CREATE OR REPLACE TABLE SPOTIFY_DB.SPOTIFY_DATA.ALBUM (
    album_id STRING,
    name STRING,
    release_date DATE,
    total_tracks INT,
    url STRING 
);
ALTER TABLE SPOTIFY_DB.SPOTIFY_DATA.ALBUM ADD PRIMARY KEY(album_id);

CREATE OR REPLACE TABLE SPOTIFY_DB.SPOTIFY_DATA.ARTIST (
    artist_id STRING,
    artist_name STRING,
    external_url STRING
);
ALTER TABLE SPOTIFY_DB.SPOTIFY_DATA.ARTIST ADD PRIMARY KEY(artist_id);

CREATE OR REPLACE TABLE SPOTIFY_DB.SPOTIFY_DATA.SONG (
    song_id STRING,
    song_name STRING,
    song_duration INT,
    song_url STRING,
    song_popularity INT,
    song_added TIMESTAMP,
    album_id STRING,
    artist_id STRING
);
ALTER TABLE SPOTIFY_DB.SPOTIFY_DATA.SONG ADD PRIMARY KEY(song_id);
ALTER TABLE SPOTIFY_DB.SPOTIFY_DATA.SONG ADD FOREIGN KEY(album_id) REFERENCES SPOTIFY_DB.SPOTIFY_DATA.ALBUM(album_id);
ALTER TABLE SPOTIFY_DB.SPOTIFY_DATA.SONG ADD FOREIGN KEY(artist_id) REFERENCES SPOTIFY_DB.SPOTIFY_DATA.ARTIST(artist_id);

// CREATING STORAGE INTEGRATION OBJECT FOR ALBUM
CREATE OR REPLACE STORAGE INTEGRATION S3_STORAGE_INTEGRATION_ALBUM
    TYPE = EXTERNAL_STAGE
    STORAGE_PROVIDER = 'S3'
    ENABLED = TRUE
    STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::339712789026:role/spotify_stage_integration_album_role'
    STORAGE_ALLOWED_LOCATIONS = ('s3://spotify-etl-project-shirsendu/transformed_data/album_data/')
    COMMENT = 'Creating connection to s3'; 

DESC STORAGE INTEGRATION S3_STORAGE_INTEGRATION_ALBUM;

// Creating file format
CREATE OR REPLACE FILE FORMAT SPOTIFY_DB.SPOTIFY_DATA.csv_file
    TYPE='CSV'
    FIELD_DELIMITER=','
    SKIP_HEADER=1
    FIELD_OPTIONALLY_ENCLOSED_BY='"';

// CREATING STAGE FOR S3 USING STORAGE INTEGRATION FOR ALBUM 
CREATE OR REPLACE STAGE SPOTIFY_DB.SPOTIFY_DATA.aws_stg_album
    URL='s3://spotify-etl-project-shirsendu/transformed_data/album_data/'
    STORAGE_INTEGRATION=S3_STORAGE_INTEGRATION_ALBUM
    FILE_FORMAT=SPOTIFY_DB.SPOTIFY_DATA.csv_file;

// CREATING STORAGE INTEGRATION OBJECT FOR ARTIST
CREATE OR REPLACE STORAGE INTEGRATION S3_STORAGE_INTEGRATION_ARTIST
    TYPE = EXTERNAL_STAGE
    STORAGE_PROVIDER = 'S3'
    ENABLED = TRUE
    STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::339712789026:role/spotify_stage_integration_artist_role'
    STORAGE_ALLOWED_LOCATIONS = ('s3://spotify-etl-project-shirsendu/transformed_data/artist_data/')
    COMMENT = 'Creating connection to s3'; 

DESC STORAGE INTEGRATION S3_STORAGE_INTEGRATION_ARTIST;

// CREATING STAGE FOR S3 USING STORAGE INTEGRATION FOR ARTIST 
CREATE OR REPLACE STAGE SPOTIFY_DB.SPOTIFY_DATA.aws_stg_artist
    URL='s3://spotify-etl-project-shirsendu/transformed_data/artist_data/'
    STORAGE_INTEGRATION=S3_STORAGE_INTEGRATION_ARTIST
    FILE_FORMAT=SPOTIFY_DB.SPOTIFY_DATA.csv_file;

// CREATING STORAGE INTEGRATION OBJECT FOR SONG
CREATE OR REPLACE STORAGE INTEGRATION S3_STORAGE_INTEGRATION_SONG
    TYPE = EXTERNAL_STAGE
    STORAGE_PROVIDER = 'S3'
    ENABLED = TRUE
    STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::339712789026:role/spotify_stage_integration_song_role'
    STORAGE_ALLOWED_LOCATIONS = ('s3://spotify-etl-project-shirsendu/transformed_data/song_data/')
    COMMENT = 'Creating connection to s3'; 

DESC STORAGE INTEGRATION S3_STORAGE_INTEGRATION_SONG;

// CREATING STAGE FOR S3 USING STORAGE INTEGRATION FOR SONG 
CREATE OR REPLACE STAGE SPOTIFY_DB.SPOTIFY_DATA.aws_stg_song
    URL='s3://spotify-etl-project-shirsendu/transformed_data/song_data/'
    STORAGE_INTEGRATION=S3_STORAGE_INTEGRATION_SONG
    FILE_FORMAT=SPOTIFY_DB.SPOTIFY_DATA.csv_file;

// COPY S3 FOR ARTIST STAGING TO TABLE
COPY INTO SPOTIFY_DB.SPOTIFY_DATA.ARTIST
FROM @SPOTIFY_DB.SPOTIFY_DATA.aws_stg_artist;

SELECT * FROM SPOTIFY_DB.SPOTIFY_DATA.ARTIST;

// COPY S3 FOR ALBUM STAGING TO TABLE
COPY INTO SPOTIFY_DB.SPOTIFY_DATA.ALBUM
FROM @SPOTIFY_DB.SPOTIFY_DATA.aws_stg_album;

SELECT * FROM SPOTIFY_DB.SPOTIFY_DATA.ALBUM;

// COPY S3 FOR SONG STAGING TO TABLE
COPY INTO SPOTIFY_DB.SPOTIFY_DATA.SONG
FROM @SPOTIFY_DB.SPOTIFY_DATA.aws_stg_song;

SELECT * FROM SPOTIFY_DB.SPOTIFY_DATA.SONG;

----------------Creating snowpipe objects-------------------------

// Creating snowpipe object for artist table
CREATE OR REPLACE pipe SPOTIFY_DB.SPOTIFY_DATA.artist_pipe
AUTO_INGEST=TRUE
AS
    COPY INTO SPOTIFY_DB.SPOTIFY_DATA.ARTIST
    FROM @SPOTIFY_DB.SPOTIFY_DATA.aws_stg_artist;

DESC PIPE SPOTIFY_DB.SPOTIFY_DATA.artist_pipe;

// Creating snowpipe object for album table
CREATE OR REPLACE pipe SPOTIFY_DB.SPOTIFY_DATA.album_pipe
AUTO_INGEST=TRUE
AS
    COPY INTO SPOTIFY_DB.SPOTIFY_DATA.ALBUM
    FROM @SPOTIFY_DB.SPOTIFY_DATA.aws_stg_album;

DESC PIPE SPOTIFY_DB.SPOTIFY_DATA.artist_pipe;

// Creating snowpipe object for song table
CREATE OR REPLACE pipe SPOTIFY_DB.SPOTIFY_DATA.song_pipe
AUTO_INGEST=TRUE
AS
    COPY INTO SPOTIFY_DB.SPOTIFY_DATA.SONG
    FROM @SPOTIFY_DB.SPOTIFY_DATA.aws_stg_song;
    
DESC PIPE SPOTIFY_DB.SPOTIFY_DATA.song_pipe;



